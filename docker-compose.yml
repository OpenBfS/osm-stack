version: '3'
services:
  postgres-master:
    build:
      context: bfs-postgres
    image: ${REGISTRY_HOST}bfs/postgis:12-3.0
    environment:
      - POSTGRES_PASSWORD=avast-humour-verboten-modesty
      - POSTGRES_MASTER=1
      - POSTGRES_ALLOWED_HOSTS=${SERVICE_HOSTS:-postgres-follower}
      - PGNET=10.0.0.0/8
    ports:
      - 6559:6556
      - 5432:5432
    networks:
      - pgnet
  postgres-follower:
    build:
      context: bfs-postgres
    image: ${REGISTRY_HOST}bfs/postgis:12-3.0
    environment:
      - POSTGRES_PASSWORD=slaver-unsettle-november-say
      - POSTGRES_MASTER_HOST=${MASTER_HOST:-postgres-master}
      - PGNET=10.0.0.0/8
    ports:
      - 5432:5432
    networks:
      - pgnet
  geoserver:
    build:
      context: geoserver
    image: ${REGISTRY_HOST}bfs/geoserver:2.16.2
    ports:
      - 8082:8080
    networks:
      - pgnet
  osm2pgsql:
    build:
      context: osm2pgsql
    image: ${REGISTRY_HOST}bfs/osm2pgsql:1.2.1
    environment:
      - POSTGRES_FOLLOWERS=${SERVICE_HOSTS:-postgres-follower} # Mehrere Werte durch Leerzeichen trennen (bash array)
      - POSTGRES_DB=osm
      - POSTGRES_MASTER_HOST=${MASTER_HOST:-postgres-master}
      - POSTGRES_MASTER_USER=osm
      - OSM_PBF_SOURCE=https://download.geofabrik.de/europe/liechtenstein-latest.osm.pbf
      - OSM_PBF_REPL_URL=http://download.geofabrik.de/europe/liechtenstein-updates
      - OSM2PGSQL_CACHE=4000
      - PGNET=10.0.0.0/8
    volumes:
      - osmpbf:/osmpbf
    networks:
      - pgnet
  nominatim-postgres-master:
    build:
      context: bfs-postgres
      dockerfile: 'Dockerfile_with_nominatim'
      args:
        NOMINATIM_TARBALL_URL: 'https://nominatim.org/release/Nominatim-3.4.1.tar.bz2'
    image: ${REGISTRY_HOST}bfs/nominatim-postgres-postgis:3.4.1-12-3.0
    environment:
      - NOMINATIM_DIR=/nominatim
      - POSTGRES_PASSWORD=avast-humour-verboten-modesty
      - POSTGRES_MASTER=1
      - PGNET=10.11.128.0/24
    ports:
      - 6557:6556
    networks:
      - pgnet_nominatim
  nominatim-photon-master:
    build:
      context: nominatim
      args:
        NOMINATIM_TARBALL_URL: 'https://nominatim.org/release/Nominatim-3.4.1.tar.bz2'
        PHOTON_ZIP_URL_BASE: 'https://github.com/komoot/photon/archive'
        PHOTON_BRANCH_TAG: '126c5445329bf0c50f131b2cb4b98fb7abef1f37'
    image: ${REGISTRY_HOST}bfs/nominatim-photon-master:3.4.1-0.3.2
    environment:
      - PHOTON_JAR_NAME=/photon/target/photon-0.3.2.jar
      - PHOTON_DATA=/photon-data
      - PLANET_SOURCE=https://download.geofabrik.de/europe/liechtenstein-latest.osm.pbf
      - PLANET_FILE=/osmdata/liechtenstein.osm.pbf
      - NOMINATIM_DIR=/nominatim
      - OSM2PGSQL_CACHE=4000
      - UPDATE_INTERVALL=86400
      - POSTGRES_HOST=${MASTER_HOST:-nominatim-postgres-master}
      - POSTGRES_DB=nominatim
      - POSTGRES_USER=nominatim
      - POSTGRES_PASS=WynEbGe9q6dAsf
      - PGPASS=/.pgpass
    volumes:
      - nominatim-osmdata:/osmdata
      - nominatim-flatnodes:/flatnodes
      - photon-data:/photon-data
    networks:
      - pgnet_nominatim
    depends_on:
      - nominatim-postgres-master
  data-master:
    build:
      context: data-master
    image: ${REGISTRY_HOST}bfs/data:1.0
    environment:
      - DATA_MASTER_SSH_PORT=2222
    volumes:
      - photon-data:/photon-data
      - ssh-authorized-keys:/ssh-authorized-keys:ro
      - openrouteservice_graphs:/openrouteservice-graphs
    ports:
      - ${DATA_MASTER_SSH_PORT:-2222}:22
  photon-slave:
    build:
      context: photon-slave
      args:
        PHOTON_VERSION: '0.3.2'
        NOMINATIM_TARBALL_URL: 'https://nominatim.org/release/Nominatim-3.4.1.tar.bz2'
        PHOTON_ZIP_URL_BASE: 'https://github.com/komoot/photon/archive'
        PHOTON_BRANCH_TAG: '126c5445329bf0c50f131b2cb4b98fb7abef1f37'
    image: ${REGISTRY_HOST}bfs/nominatim-photon-slave:3.4.1-0.3.2
    environment:
      - MASTER_HOSTNAME=${MASTER_HOST:-localhost}
      - MASTER_PORT=${MASTER_PORT:-2222}
      - PHOTON_VERSION=0.3.2
    volumes:
      - photon-data-slave:/photon-data
      - ssh-private-keys:/ssh-private-keys
  openrouteservice-import:
    container_name: 'openrouteservice-import'
    build:
      context: 'openrouteservice'
      dockerfile: 'Dockerfile_import'
      args:
        APP_CONFIG: 'bfs.config'
        JAVA_OPTS: '-Djava.awt.headless=true -server -XX:TargetSurvivorRatio=75 -XX:SurvivorRatio=64 -XX:MaxTenuringThreshold=3 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Xms16g -Xmx16g'
        ORS_ZIP_URL_BASE: 'https://github.com/GIScience/openrouteservice/archive'
        ORS_BRANCH_TAG: 'v6.0.0'
        ORS_BRANCH_TAG_IN_ZIP: '6.0.0'
    image: ${REGISTRY_HOST}bfs/openrouteservice-import:v6.0.0
    environment:
      - JAVA_OPTS="-Djava.awt.headless=true -server -XX:TargetSurvivorRatio=75 -XX:SurvivorRatio=64 -XX:MaxTenuringThreshold=3 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Xms8g -Xmx28g"
      - JAR_FILE=/ors-core/openrouteservice/target/ors-jar-with-dependencies.jar
      - PLANET_SOURCE=https://download.geofabrik.de/europe/liechtenstein-latest.osm.pbf
    volumes:
      - openrouteservice_osm_file:/var/data/osm-data
      - openrouteservice_graphs:/var/data/graphs
      - openrouteservice_elevation_cache:/var/data/elevation_cache
      - openrouteservice_generation_logs:/var/logs/ors
  openrouteservice-app:
    container_name: 'openrouteservice-app'
    ports:
      - 8080:8080
    build:
      context: 'openrouteservice'
      dockerfile: 'Dockerfile_app'
      args:
        APP_CONFIG: 'bfs.config'
        # Die bauzeitliche Umgebungsvariable JAVA_OPTS wird in /usr/local/tomcat/bin/setenv.sh geschrieben und ist somit eine Umgebungsvariable f√ºr Tomcat.
        JAVA_OPTS: '-Djava.awt.headless=true -server -XX:TargetSurvivorRatio=75 -XX:SurvivorRatio=64 -XX:MaxTenuringThreshold=3 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:ParallelGCThreads=4 -Xms1g -Xmx16g'
    image: ${REGISTRY_HOST}bfs/openrouteservice-app:v6.0.0
    environment:
      - MASTER_HOSTNAME=${MASTER_HOST:-localhost}
      - MASTER_PORT=${MASTER_PORT:-2222}
    volumes:
      - openrouteservice_osm_file:/var/data/osm-data
      - openrouteservice_graphs_slave:/var/data/graphs
      - openrouteservice_elevation_cache:/var/data/elevation_cache
      - openrouteservice_tomcat_logs:/urs/local/tomcat/logs
      - openrouteservice_ors_logs:/urs/local/ors/logs
      - ssh-private-keys:/ssh-private-keys
  openrouteservice-proxy:
    build:
      context: openrouteservice
      dockerfile: 'Dockerfile_proxy'
      args:
        ORS_WEB_BRANCH_TAG: 'v0.5.0'
        # The version/branch string in the top level directory of the ZIP archive can differ, e.g. have not "v" at the beginning. Download the archive on your computer first and check what's needed.
        ORS_WEB_BRANCH_TAG_IN_ZIP: '0.5.0'
        TILE_URLBASE_BKG: 'http://tileserver/bkg'
        TILE_URLBASE_OSMDE: 'http://tileserver/osmde'
        TILE_URLBASE_BASIC: 'http://tileserver/basic'
        TILE_URLBASE_LABELS: 'http://tileserver/labels'
        GEOCODE_URL_BASE: '/ors/geocode'
    image: ${REGISTRY_HOST}bfs/openrouteservice-proxy:2.4
    ports:
      - 81:81
    depends_on:
      - openrouteservice-app
  http-proxy:
    build:
      context: http-proxy
      dockerfile: 'Dockerfile'
    image: ${REGISTRY_HOST}bfs/http-proxy:2.4
    ports:
      - 80:80
    depends_on:
      - photon-slave
  tile-web:
    build:
      context: apache-tirex
    image: ${REGISTRY_HOST}bfs/apache-tirex:2.4.29-0.6.2
    environment:
      - DB_HOST=${SERVICE_HOST:-postgres-follower}
      - DB_PORT=5432
      - DB_NAME=osm
      - DB_USER=osm
      - DB_SUPERUSER=postgres
      - DB_TABLE_GERMAN_TILED=german_tiled
      - DB_NAME_CONTOURS=contours
      - CONTOURS_URL=https://kunden.geofabrik.de/8852d88888bb1245d889ff5847027816/contours-demo.sql.gz
      - HILLSHADE_URL=https://kunden.geofabrik.de/8852d88888bb1245d889ff5847027816/hillshade-demo.tar.gz
      - TMS_TOPPLUSOPEN_URL=https://tile.geofabrik.de/deadbeefdeadbeefdeadbeefdeadbeef/
    ports:
      - 8081:80
      - 6558:6556
    volumes:
      - tiles:/var/lib/tirex/tiles
    networks:
      - pgnet

  monitoring:
    image: checkmk/check-mk-raw:1.5.0-latest
    environment:
      - CMK_PASSWORD=das-wort-heisst-nukular
    ports:
      - 8090:5000
    ulimits:
      nofile:
        soft: 1024
        hard: 1024
    volumes:
      - ./checkmk-master/sites:/omd/sites
    restart: always
    networks:
      - pgnet


volumes:
  osmpbf:
  nominatim-osmdata:
  nominatim-flatnodes:
  photon-data:
  ssh-authorized-keys:
  ssh-private-keys:
  photon-data-slave:
  tiles:
  # "style-data" already included in apache-tirex/Dockerfile. DON'T REDEFINE!
  openrouteservice_osm_file:
  openrouteservice_graphs:
  openrouteservice_graphs_slave:
  openrouteservice_elevation_cache:
  openrouteservice_generation_logs:
  openrouteservice_tomcat_logs:
  openrouteservice_ors_logs:
  openrouteservice_webapp:

networks:
  pgnet:
    ipam:
      config:
        - subnet: 10.11.11.0/24
  pgnet_nominatim:
    ipam:
      config:
        - subnet: 10.11.128.0/24
