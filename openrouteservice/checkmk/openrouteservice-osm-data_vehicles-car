#! /usr/bin/env python3

import time
import os
import os.path

LINE_START = b'datareader.data.date='

scriptname = os.path.basename(__file__)
profile = scriptname.split('_')[-1]

if '.' in profile:
    print('UNKNOWN {} - Routing profile should not contain a dot. Script name should end with \'_PROFILE\', not \'.py\' where PROFILE is the profile')
    exit(1)

ERROR_THRESHOLD = 2 * 24 * 3600
WARN_THRESHOLD = 0.6 * ERROR_THRESHOLD

error_hours = ERROR_THRESHOLD / 3600.0
warn_hours = ERROR_THRESHOLD / 3600.0

mod = 0
# the properties file contains some blobs which are are invalid UTF-8.
# Therefore, we have to read it binary and decode it ourselves.
data = b''
with open('/var/data/graphs/{}/properties'.format(profile), 'rb') as propsfile:
    data = propsfile.read()
    last = 0
    line = None
for i in range(len(data)):
    c = data[i]
    if c == 0x0A:
        line = data[last:i]
        last = i + 1
        if line.startswith(LINE_START):
            date = line[len(LINE_START):].decode('utf-8')
            mod = time.mktime(time.strptime(date, '%Y-%m-%dT%H:%M:%SZ'))
            break
now = time.time()
diff = now - mod
age_hours = diff / 3600.0

status = 'OK'
detail = status
if diff > WARN_THRESHOLD:
    status = 'WARN'
    detail = 'OSM data updated more than {} hours ago'.format(int(warn_hours))
if diff > ERROR_THRESHOLD:
    status = 'CRIT'
    detail = 'OSM data updated more than {} hours ago'.format(int(error_hours))

print('{} {} age_hours={:.3f};{};{} {}'.format(status, scriptname, age_hours, warn_hours, error_hours, detail))
