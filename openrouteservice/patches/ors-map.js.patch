--- app/components/ors-map/ors-map.js
+++ app/components/ors-map/ors-map.js
@@ -62,52 +62,29 @@ angular.module("orsApp").directive("orsMap", () => {
         let ak = "?api_key=" + apiKey;
 
         $scope.translateFilter = $filter("translate");
-        const mapsurfer = L.tileLayer(ENV.mapsurfer + ak, {
-          attribution: orsNamespaces.layerMapSurfer.attribution,
-          id: 0
-        });
-        const bkgtopplus = L.tileLayer.wms(orsNamespaces.layerBkgTopPlus.url, {
+        const bkgtopplusgrey = L.tileLayer(ENV.tileLayers.bkgGrey, {
           layers: "web",
           format: "image/png",
           attribution:
             '© <a href="http://www.bkg.bund.de">Bundesamt für Kartographie und Geodäsie</a> 2017, <a href="https://sgx.geodatenzentrum.de/web_public/Datenquellen_TopPlus_Open.pdf">Datenquellen</a>',
-          id: 1
+          id: 0
         });
-        const bkgtopplusgrey = L.tileLayer.wms(
-          orsNamespaces.layerBkgTopPlus.url,
-          {
-            layers: "web_grau",
-            format: "image/png",
-            attribution:
-              '© <a href="http://www.bkg.bund.de">Bundesamt für Kartographie und Geodäsie</a> 2017, <a href="https://sgx.geodatenzentrum.de/web_public/Datenquellen_TopPlus_Open.pdf">Datenquellen</a>',
-            id: 2
-          }
-        );
         const openstreetmap = L.tileLayer(orsNamespaces.layerOSM.url, {
           attribution: orsNamespaces.layerOSM.attribution,
-          id: 3
+          id: 1
         });
-        const opencyclemap = L.tileLayer(orsNamespaces.layerOSMCycle.url, {
-          attribution: orsNamespaces.layerOSMCycle.attribution,
-          id: 4
+        const osmCartoDE = L.tileLayer(ENV.tileLayers.osmDE, {
+          attribution: orsNamespaces.layerOSM.attribution,
+          id: 2
         });
-        const transportdark = L.tileLayer(orsNamespaces.layerOSMDark.url, {
-          attribution: orsNamespaces.layerOSMDark.attribution,
-          id: 5
+        const osmBasicPastelHillshade = L.tileLayer(ENV.tileLayers.osmBasicPastHill, {
+          attribution: ENV.osmAndTerrainAttribution,
+          id: 3
         });
-        const outdoors = L.tileLayer(orsNamespaces.layerOutdoors.url, {
-          attribution: orsNamespaces.layerOutdoors.attribution,
-          id: 6
+        const osmLabelsOnly = L.tileLayer(ENV.tileLayers.labelsOnly, {
+          attribution: orsNamespaces.layerOSM.attribution,
+          id: 4
         });
-        // const stamen = L.tileLayer(orsNamespaces.layerStamen.url, {
-        //     attribution: orsNamespaces.layerStamen.attribution,
-        // });
-        /*const hillshade = L.tileLayer(orsNamespaces.overlayHillshade.url, {
-                    format: 'image/png',
-                    opacity: 0.45,
-                    transparent: true,
-                    attribution: '<a href="http://srtm.csi.cgiar.org/">SRTM</a>; ASTER GDEM is a product of <a href="http://www.meti.go.jp/english/press/data/20090626_03.html">METI</a> and <a href="https://lpdaac.usgs.gov/products/aster_policies">NASA</a>',
-                });*/
         $scope.heightGraphData = [];
         $scope.geofeatures = {
           layerLocationMarker: L.featureGroup(),
@@ -410,8 +387,8 @@ angular.module("orsApp").directive("orsMap", () => {
                 settings.zoom
               );
             } else {
-              // Heidelberg
-              $scope.orsMap.setView([49.409445, 8.692953], 13);
+              // Bundesamt für Strahlenschutz, Freiburg im Breisgau
+              $scope.orsMap.setView([47.99840, 7.84631], 8);
               if (orsCookiesFactory.getMapOptions()) {
                 // Welcome box
                 $scope.welcomeMsgBox = L.control({
@@ -510,13 +487,11 @@ angular.module("orsApp").directive("orsMap", () => {
           setSettings();
         };
         $scope.baseLayers = {
-          OpenMapSurfer: mapsurfer,
-          "TopPlus-Web-Open": bkgtopplus,
           "TopPlus-Web-Open Greyscale": bkgtopplusgrey,
-          OpenStreetMap: openstreetmap,
-          OpenCycleMap: opencyclemap,
-          "Transport Dark": transportdark,
-          Outdoors: outdoors
+          "OSM Carto (OSMF)": openstreetmap,
+          "OSM Carto DE": osmCartoDE,
+          "OSM Basic Pastel Hillshade": osmBasicPastelHillshade,
+          "Labels only": osmLabelsOnly
         };
         $scope.overlays = {
           // "Hillshade": hillshade
